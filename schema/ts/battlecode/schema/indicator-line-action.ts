// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

/**
 * Update the indicator line for this robot
 */
export class IndicatorLineAction {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):IndicatorLineAction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

startLoc():number {
  return this.bb!.readUint16(this.bb_pos);
}

endLoc():number {
  return this.bb!.readUint16(this.bb_pos + 2);
}

colorHex():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static sizeOf():number {
  return 8;
}

static createIndicatorLineAction(builder:flatbuffers.Builder, startLoc: number, endLoc: number, colorHex: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(colorHex);
  builder.writeInt16(endLoc);
  builder.writeInt16(startLoc);
  return builder.offset();
}

}
