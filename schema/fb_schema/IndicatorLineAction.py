# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fb_schema

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# Update the indicator line for this robot
class IndicatorLineAction(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 8

    # IndicatorLineAction
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IndicatorLineAction
    def StartLoc(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # IndicatorLineAction
    def EndLoc(self): return self._tab.Get(flatbuffers.number_types.Uint16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
    # IndicatorLineAction
    def ColorHex(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))

def CreateIndicatorLineAction(builder, startLoc, endLoc, colorHex):
    builder.Prep(4, 8)
    builder.PrependInt32(colorHex)
    builder.PrependUint16(endLoc)
    builder.PrependUint16(startLoc)
    return builder.Offset()
