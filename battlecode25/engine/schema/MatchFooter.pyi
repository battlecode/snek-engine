from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing
from ..schema.ProfilerFile import ProfilerFile
from ..schema.TimelineMarker import TimelineMarker
from ..schema.WinType import WinType

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class MatchFooter(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> MatchFooter: ...
  @classmethod
  def GetRootAsMatchFooter(cls, buf: bytes, offset: int) -> MatchFooter: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Winner(self) -> int: ...
  def WinType(self) -> typing.Literal[WinType.RESIGNATION, WinType.MAJORITY_PAINTED, WinType.AREA_PAINTED, WinType.MORE_TOWERS, WinType.MORE_MONEY, WinType.MORE_STORED_PAINT, WinType.MORE_ROBOTS, WinType.COIN_FLIP]: ...
  def TotalRounds(self) -> int: ...
  def TimelineMarkers(self, i: int) -> TimelineMarker | None: ...
  def TimelineMarkersLength(self) -> int: ...
  def TimelineMarkersIsNone(self) -> bool: ...
  def ProfilerFiles(self, i: int) -> ProfilerFile | None: ...
  def ProfilerFilesLength(self) -> int: ...
  def ProfilerFilesIsNone(self) -> bool: ...
def MatchFooterStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def MatchFooterAddWinner(builder: flatbuffers.Builder, winner: int) -> None: ...
def MatchFooterAddWinType(builder: flatbuffers.Builder, winType: typing.Literal[WinType.RESIGNATION, WinType.MAJORITY_PAINTED, WinType.AREA_PAINTED, WinType.MORE_TOWERS, WinType.MORE_MONEY, WinType.MORE_STORED_PAINT, WinType.MORE_ROBOTS, WinType.COIN_FLIP]) -> None: ...
def MatchFooterAddTotalRounds(builder: flatbuffers.Builder, totalRounds: int) -> None: ...
def MatchFooterAddTimelineMarkers(builder: flatbuffers.Builder, timelineMarkers: uoffset) -> None: ...
def MatchFooterStartTimelineMarkersVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartTimelineMarkersVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def MatchFooterAddProfilerFiles(builder: flatbuffers.Builder, profilerFiles: uoffset) -> None: ...
def MatchFooterStartProfilerFilesVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def StartProfilerFilesVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def MatchFooterEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

