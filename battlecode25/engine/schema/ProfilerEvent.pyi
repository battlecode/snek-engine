from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class ProfilerEvent(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> ProfilerEvent: ...
  @classmethod
  def GetRootAsProfilerEvent(cls, buf: bytes, offset: int) -> ProfilerEvent: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def IsOpen(self) -> bool: ...
  def At(self) -> int: ...
  def Frame(self) -> int: ...
def ProfilerEventStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def ProfilerEventAddIsOpen(builder: flatbuffers.Builder, isOpen: bool) -> None: ...
def ProfilerEventAddAt(builder: flatbuffers.Builder, at: int) -> None: ...
def ProfilerEventAddFrame(builder: flatbuffers.Builder, frame: int) -> None: ...
def ProfilerEventEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

