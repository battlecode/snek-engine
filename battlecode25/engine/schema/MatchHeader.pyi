from __future__ import annotations

import flatbuffers
import numpy as np

import flatbuffers
import typing
from ..schema.GameMap import GameMap

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class MatchHeader(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> MatchHeader: ...
  @classmethod
  def GetRootAsMatchHeader(cls, buf: bytes, offset: int) -> MatchHeader: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Map(self) -> GameMap | None: ...
  def MaxRounds(self) -> int: ...
def MatchHeaderStart(builder: flatbuffers.Builder) -> None: ...
def Start(builder: flatbuffers.Builder) -> None: ...
def MatchHeaderAddMap(builder: flatbuffers.Builder, map: uoffset) -> None: ...
def MatchHeaderAddMaxRounds(builder: flatbuffers.Builder, maxRounds: int) -> None: ...
def MatchHeaderEnd(builder: flatbuffers.Builder) -> uoffset: ...
def End(builder: flatbuffers.Builder) -> uoffset: ...

